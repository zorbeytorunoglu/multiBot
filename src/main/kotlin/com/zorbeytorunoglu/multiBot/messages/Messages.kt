package com.zorbeytorunoglu.multiBot.messages

data class Messages(

    val ticketPanelSent: String = "Ticket panel is sent!",
    val noPermission: String = "You have no permission!",
    val ticketPanelIdOption: String = "The ID of the ticket panel (ticketPanels.json)",
    val targetCategoryNotFound: String = "Target category could not be found.",
    val ticketReady: String = "Your ticket is ready! %ticket%",
    val exceedTicketLimit: String = "You can not exceed your ticket limit!",
    val reminder: String = "**Reminder!**",
    val reminderSet: String = "Reminder set!",
    val notAudioChannel: String = "That channel is not an audio channel!",
    val alreadyConnected: String = "Bot is already connected to a channel. Try '/record stop' first.",
    val recordingStarted: String = "Recording started!",
    val notRecording: String = "Bot is not recording!",
    val recordingStopped: String = "Recording is stopped!",
    val notInVoiceChannel: String = "You are not in a voice channel!",
    val mustBeMemberOrRole: String = "Holder must be a member or a role!",
    val notValidPermission: String = "It is not a valid permission!",
    val permissionGiven: String = "Permission %permission% is given to %holder%!",
    val alreadyHasThisPermission: String = "Subject already has this permission!",
    val alreadyHasNotThisPermission: String = "Subject does not have this permission already!",
    val permissionRemoved: String = "Permission %permission% is removed from %holder%!",
    val hasNoPermission: String = "Subject does not have any permission. If he can use the commands, he may be authorized by the guild.",
    val permissionCheckTitle: String = "Permission List of %holder%",
    val saySent: String = "Message is sent!",
    val memberNotFound: String = "Member could not be found.",
    val notATicket: String = "This is not a ticket channel!",
    val alreadyInTicket: String = "Member is already has permission to view and send message to the ticket!",
    val addedToTicket: String = "%member% has been added to the ticket!",
    val notInTicket: String = "Member is not in the ticket!",
    val ticketWillBeDeleted: String = "Ticket will be in 10 seconds!",
    val deleteConfirm: String = "Submit /delete command again to confirm to delete.",
    val transcriptRetrievingMessages: String = "Retrieving messages...",
    val transcriptMessagesRetrieved: String = "Messages are retrieved, creating the transcript...",
    val transcriptGenerating: String = "Generating a transcript...",
    val transcriptGenerated: String = "Transcript is generated!",
    val categoryNotFound: String = "Category with that ID could not be found.",
    val noRoleSpecified: String = "No role is specified.",
    val taskChannelExists: String = "There is already a task channel in that category.",
    val taskChannelCreated: String = "Task channel %channel% has been created!",
    val invalidHeadRole: String = "Invalid head role!",
    val invalidChannel: String = "Invalid channel!",
    val invalidDate: String = "Invalid date! Remember the format: dd-MM-yyyy",
    val taskCreated: String = "Task is created! Here it is: %channel%",
    val assigneeNewTaskDm: String = "You have a new task! %channel%",
    val taskEmbedDeadline: String = "Deadline",
    val taskEmbedAssignees: String = "Assignees",
    val taskEmbedGivenBy: String = "Given By",
    val taskEmbedWatchers: String = "Watchers",
    val taskEmbedPriority: String = "Priority",
    val taskEmbedStatus: String = "Status",
    val taskChannelNotFound: String = "Task channel could not be found.",
    val refreshedTags: String = "Tags are refreshed!",
    val taskSetMembersNotFound: String = "Members to be assignees could not be found from the value. Remember to separate them with ','",
    val taskNotFound: String = "Task could not be found.",
    val assigneeSet: String = "Assignees are updated!",
    val invalidStatus: String = "Invalid status! Your options: 'in progress, open, done'",
    val deadlineSet: String = "Deadline is set!",
    val statusSet: String = "Status set!",
    val watcherSet: String = "Watchers are set!",
    val taskSetWatchersNotFound: String = "Members to be watchers could not be found from the value. Remember to separate them with ','",
    val prioritySet: String = "Priority is set!",
    val taskChannelHeadsSet: String = "Task channel heads are set!",
    val totalTaskCount: String = "Total task count is **%count%**",
    val taskCountMember: String = "Task count of %member% is **%count%**",
    val taskCountChannel: String = "Task count of %channel% is **%count%**",
    val taskCountRole: String = "Task count of %role% is **%count%**",
    val wrongCountUsage: String = "You have used the command wrong!",
    val taskCountStatusMentionable: String = "Task count of %mentionable% with the status of __%status%__ is **%count%**",
    val all: String = "ALL",
    val notHead: String = "You do not have the needed __head__ role to create task there.",
    val deadlinePast: String = "The task has passed the deadline! %mentions%",
    val notifyAssigneePassedDeadline: String = "Your task has passed the deadline! %channel%",
    val notifyWatchersPassedDeadline: String = "A task that you are a watcher of has passed the deadline! %channel%",
    val taskEmbedCompletionDate: String = "Completion Date",
    val markedDone: String = "Task has been marked as complete by %member% on **%date%**",
    val invalidAssignees: String = "Invalid assignees! You can use mentions, IDs or effective names only. Do not forget to separate them with ',' if you want to have multiple assignees.",
    val statsTitle: String = "Task stats of **%member%**",
    val statsTotalCompleted: String = "Total completed tasks: %count%",
    val statsCompletedOnTime: String = "Tasks completed on time: %count%",
    val statsDelayedTasks: String = "Tasks completed post deadline: %count%",
    val statsActiveTasks: String = "Open tasks: %count%",
    val statsInProgressTasks: String = "Tasks in progress: %count%",
    val wrongStatsUsage: String = "Incorrect usage! You must choose a role or a member."

)
